/**
 * Even Fibonacci numbers
 */
public class Problem002 {
    private static final int MAX_VALUE = 4000000;

    public static void main(String[] args) {
        System.out.println(returnSumOfEvenValuedFibonacciTerms(MAX_VALUE));
    }

    /**
     * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
     * the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
     * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of
     * the even-valued terms.
     * @return  The sum of the even-valued terms that are under maxValue
     */
    private static int returnSumOfEvenValuedFibonacciTerms(int maxValue) {
        int sumOfEvenNumbers = 0;
        int valueOne = 1;
        int valueTwo = 2;
        int highestTerm = 3;

        while (highestTerm <= maxValue) {
            if (highestTerm % 2 == 0) {
                sumOfEvenNumbers += highestTerm;
            }
            highestTerm = valueOne + valueTwo;
            valueOne = valueTwo;
            valueTwo = highestTerm;
        }
        return sumOfEvenNumbers + 2;
    }

}
